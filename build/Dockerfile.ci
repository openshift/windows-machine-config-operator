# CI Dockerfile
# CI requires a special Dockerfile for use with OpenShift Builds which is what is used to build the image. This requires
# building the operator from the PR source without using the operator-sdk.

# build stage for building binaries
FROM registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.17-openshift-4.10 as build
LABEL stage=build
WORKDIR /build/

# dos2unix is needed to build CNI plugins
# jq is needed in e2e test script to count the number of data items in the windows-instances ConfigMap
RUN yum install -y dos2unix jq

# Download client binaries
# TODO: Remove this, see https://issues.redhat.com/browse/WINC-520 
RUN curl -L -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.6.4/openshift-client-linux-4.6.4.tar.gz -o openshift-origin-client-tools.tar.gz \
    && echo "c1f39a966fc0dbd4f8f0bfec0196149d54e0330de523bf906bbe2728b10a860b openshift-origin-client-tools.tar.gz" | sha256sum -c \
    && tar -xzf openshift-origin-client-tools.tar.gz \
    && rm -rf ./{openshift*,README.md}

# The source here corresponds to the code in the PR and is placed here by the CI infrastructure.
WORKDIR /build/windows-machine-config-operator/
# Copy .git metadata so that we can generate the version for the WMCO binary
COPY .git .git

# Build WMCB
WORKDIR /build/windows-machine-config-operator/windows-machine-config-bootstrapper/
COPY windows-machine-config-bootstrapper/ .
RUN make build

# Build hybrid-overlay
WORKDIR /build/windows-machine-config-operator/ovn-kubernetes/
COPY ovn-kubernetes/ .
WORKDIR /build/windows-machine-config-operator/ovn-kubernetes/go-controller/
RUN make windows

# Build promu utility tool, needed to build the windows_exporter.exe metrics binary
WORKDIR /build/windows-machine-config-operator/promu/
COPY promu/ .
# Explicitly set the $GOBIN path for promu installation
RUN GOBIN=/build/windows-machine-config-operator/windows_exporter/ go install .

# Build windows_exporter
WORKDIR /build/windows-machine-config-operator/windows_exporter/
COPY windows_exporter/ .
RUN GOOS=windows ./promu build -v

# Build containerd
WORKDIR /build/windows-machine-config-operator/containerd/
COPY containerd/ .
RUN GOOS=windows make

# Build containerd shim
WORKDIR /build/windows-machine-config-operator/hcsshim/
COPY hcsshim/ .
RUN GOOS=windows go build ./cmd/containerd-shim-runhcs-v1

# Build kubelet
WORKDIR /build/windows-machine-config-operator/kubelet/
COPY kubelet/ .
ENV KUBE_BUILD_PLATFORMS windows/amd64
RUN make WHAT=cmd/kubelet

# Build kube-proxy
WORKDIR /build/windows-machine-config-operator/kube-proxy/
COPY kube-proxy/ .
ENV KUBE_BUILD_PLATFORMS windows/amd64
RUN make WHAT=cmd/kube-proxy

# Build azure-cloud-node-manager
WORKDIR /build/windows-machine-config-operator/cloud-provider-azure/
COPY cloud-provider-azure/ .
RUN GOOS=windows go build -o azure-cloud-node-manager.exe ./cmd/cloud-node-manager

# Build CNI plugins
WORKDIR /build/windows-machine-config-operator/containernetworking-plugins/
COPY containernetworking-plugins/ .
ENV CGO_ENABLED=0
RUN ./build_windows.sh

# Build WMCO
WORKDIR /build/windows-machine-config-operator
# Copy files and directories needed to build the WMCO binary
COPY build build
COPY main.go .
COPY controllers controllers
COPY bundle bundle
COPY hack hack
COPY pkg pkg
COPY test test
COPY vendor vendor
COPY version version
COPY go.mod go.mod
COPY go.sum go.sum
COPY Makefile Makefile
COPY tools.go tools.go
COPY .gitignore .gitignore
RUN make build

# Build the operator image with following payload structure
# /payload/
#├── azure-cloud-node-manager.exe
#├── cni
#│   ├── flannel.exe
#│   ├── host-local.exe
#│   ├── win-bridge.exe
#│   ├── win-overlay.exe
#│   └── cni-conf-template.json
#├── containerd
#│   ├── containerd.exe
#│   └── containerd-shim-runhcs-v1.exe
#├── hybrid-overlay-node.exe
#├── kube-node
#│   ├── kubelet.exe
#│   └── kube-proxy.exe
#├── powershell
#│   └── wget-ignore-cert.ps1
#│   └── hns.psm1
#├── windows_exporter.exe
#└── wmcb.exe

FROM registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.17-openshift-4.10
LABEL stage=operator

# Copy wmcb.exe
WORKDIR /payload/
COPY --from=build /build/windows-machine-config-operator/windows-machine-config-bootstrapper/wmcb.exe .

# Copy hybrid-overlay-node.exe
COPY --from=build /build/windows-machine-config-operator/ovn-kubernetes/go-controller/_output/go/bin/windows/hybrid-overlay-node.exe .

# Copy windows_exporter.exe
COPY --from=build /build/windows-machine-config-operator/windows_exporter/windows_exporter.exe .

# Copy azure-cloud-node-manager.exe
COPY --from=build /build/windows-machine-config-operator/cloud-provider-azure/azure-cloud-node-manager.exe .

# Copy containerd.exe and containerd-shim-runhcs-v1.exe
WORKDIR /payload/containerd/
COPY --from=build /build/windows-machine-config-operator/containerd/bin/containerd.exe .
COPY --from=build /build/windows-machine-config-operator/hcsshim/containerd-shim-runhcs-v1.exe .

# Copy kubelet.exe and kube-proxy.exe
WORKDIR /payload/kube-node/
COPY --from=build /build/windows-machine-config-operator/kubelet/_output/local/bin/windows/amd64/kubelet.exe .
COPY --from=build /build/windows-machine-config-operator/kube-proxy/_output/local/bin/windows/amd64/kube-proxy.exe .

# Copy CNI plugin binaries and CNI config template cni-conf-template.json
WORKDIR /payload/cni/
COPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/host-local.exe .
COPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/win-bridge.exe .
COPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/win-overlay.exe .
COPY --from=build /build/windows-machine-config-operator/pkg/internal/cni-conf-template.json .

# Copy required powershell scripts
WORKDIR /payload/powershell/
COPY --from=build /build/windows-machine-config-operator/pkg/internal/wget-ignore-cert.ps1 .
COPY --from=build /build/windows-machine-config-operator/pkg/internal/hns.psm1 .

WORKDIR /

ENV OPERATOR=/usr/local/bin/windows-machine-config-operator \
    USER_UID=1001 \
    USER_NAME=windows-machine-config-operator

# Changes needed for our CI

# Install client binaries
COPY --from=build /build/oc /usr/bin/oc
COPY --from=build /build/kubectl /usr/bin/kubectl
RUN oc version

# Copy the source code to be used by our ci infra
WORKDIR /go/src/github.com/openshift/windows-machine-config-operator/
COPY --from=build /build/windows-machine-config-operator .

# install operator binary
COPY --from=build /build/windows-machine-config-operator/build/_output/bin/windows-machine-config-operator ${OPERATOR}
COPY --from=build /build/windows-machine-config-operator/build/bin /usr/local/bin
RUN  /usr/local/bin/user_setup

# Allow uid/gid in OpenShift
RUN chmod g=u /etc/passwd /etc/group
RUN chmod g=u /etc

# Create the directories needed for CI to work
RUN mkdir -m 777 -p /etc/cloud/
RUN mkdir -m 777 -p /etc/private-key/

# Open up permissions within WMCO directory
RUN chmod -R g=u+w /go/src/github.com/openshift/windows-machine-config-operator/

ENTRYPOINT [ "/bin/bash" ]
USER ${USER_UID}
